import {execSync} from 'child_process';
import esbuild from 'esbuild';
import site from './site.config.js';
import collections from './src/config/collections/collections.js';
import filters from './src/config/filters/filters.js';
import shortcodes from './src/config/shortcodes/shortcodes.js';
import htmlmin from 'html-minifier-terser';

// --------------- Plugins --------------------------
import {eleventyImageTransformPlugin} from '@11ty/eleventy-img';
import syntaxHighlightPlugin from '@11ty/eleventy-plugin-syntaxhighlight';
import pluginRss from '@11ty/eleventy-plugin-rss';
import fontAwesomePlugin from "@11ty/font-awesome";
import { library } from '@fortawesome/fontawesome-svg-core'
import { all } from '@awesome.me/kit-c1b42413a1/icons';
import generateSocialImages from '@my-ginger-pussy/eleventy-social-images';
import pluginTOC from '@uncenter/eleventy-plugin-toc';
import markdownLib from './src/config/markdown/markdown.js';

// Kit icons
library.add(...all);

export default async function (eleventyConfig) {
  // ----------------- Global Data -----------------
  eleventyConfig.addGlobalData('site', site);

  // ----------------- Pathfind Search -----------------
  eleventyConfig.on('eleventy.after', async () => {
    execSync(`npx pagefind --site _site --glob \"**/*.html\"`, {encoding: 'utf-8'});
  });

  // --------------- Sass -------------------
  eleventyConfig.setBrowserSyncConfig({
    files: './_site/css/**/*.css'
  });

  // ---------------JS -------------------
  eleventyConfig.on('afterBuild', () => {
    return esbuild.build({
      entryPoints: ['./src/assets/js/main.js'],
      outdir: '_site/assets/js',
      minify: process.env.ELEVENTY_ENV === 'production',
      sourcemap: process.env.ELEVENTY_ENV !== 'production'
    });
  });
  eleventyConfig.addWatchTarget('./sass/');
  eleventyConfig.addWatchTarget('./js/');

  // ---------------- Collections -----------------------
  Object.keys(collections).forEach(collectionName => {
    eleventyConfig.addCollection(collectionName, collections[collectionName]);
  });

  // ---------------- Shortcodes -----------------------
  Object.keys(shortcodes).forEach((shortcodeName) => {
    eleventyConfig.addShortcode(shortcodeName, shortcodes[shortcodeName])
  });

  // ---------------- Filters -----------------------
  Object.keys(filters).forEach(filterName => {
    eleventyConfig.addFilter(filterName, filters[filterName]);
  });

  // 	--------     --- Layouts ------      -------------
  eleventyConfig.addLayoutAlias('base', 'base.njk');
  eleventyConfig.addLayoutAlias('default', 'default.njk');
  eleventyConfig.addLayoutAlias('contact', 'contact.njk');
  eleventyConfig.addLayoutAlias('fabrication', 'fabrication.njk');
  eleventyConfig.addLayoutAlias('machining', 'machining.njk');
  eleventyConfig.addLayoutAlias('post', 'post.njk');
  eleventyConfig.addLayoutAlias('feed', 'feed.njk');

  // --------------- Plugins --------------------------
  eleventyConfig.addPlugin(syntaxHighlightPlugin, {
    trim: true
  });
  eleventyConfig.addPlugin(fontAwesomePlugin, {
    transform: 'i[class]',
		shortcode: "icon",
    failOnError: true,
    defaultAttributes: {
      class: 'icon-svg',
    },
	});
  eleventyConfig.addPlugin(pluginRss);
  eleventyConfig.addPlugin(pluginTOC);
  eleventyConfig.addPlugin(markdownLib);
  eleventyConfig.addPlugin(eleventyImageTransformPlugin, {
    extensions: 'html',
    formats: ['webp', 'jpeg'],
    widths: ['300', '600', '1200', 'auto'],
    defaultAttributes: {
      loading: 'lazy',
      decoding: 'async',
      sizes: '90vw'
    }
  });
  eleventyConfig.addPlugin(generateSocialImages, {
    promoImage: './src/assets/images/fw-frost-engineers-logo.jpg',
    outputDir: './_site/socialImages',
    urlPath: '/socialImages',
    siteUrl: 'Website ~ https://www.fwfrost-engineers.co.uk',
    siteEmail: 'Email ~ sales@fwfrost-engineers.co.uk',
    titleColor: '#fff',
    bgColor: '#fff',
    terminalBgColor: '#008080',
    lineBreakAt: '48'
  });

  // --------------- Minify HTML --------------------------
  eleventyConfig.addTransform('html-minify', (content, path) => {
    if (path && path.endsWith('.html') && process.env.ELEVENTY_ENV === 'production') {
      return htmlmin.minify(content, {
        collapseBooleanAttributes: true,
        collapseWhitespace: true,
        decodeEntities: true,
        includeAutoGeneratedTags: false,
        minifyCSS: true,
        minifyJS: true,
        minifyURLs: true,
        noNewlinesBeforeTagClose: true,
        quoteCharacter: '"',
        removeComments: true,
        sortAttributes: true,
        sortClassName: true,
        useShortDoctype: true,
        processScripts: ['application/ld+json']
      });
    }
    return content;
  });

  //  ---------------- Ignores ------------------------
  eleventyConfig.ignores.add('src/assets/**/*');
  eleventyConfig.watchIgnores.add('src/assets/**/*');

  // 	----------- Passthrough File Copy ------------------
  eleventyConfig.setServerPassthroughCopyBehavior('copy');
  eleventyConfig.addPassthroughCopy('src/assets/css');
  eleventyConfig.addPassthroughCopy('src/assets/docs');
  eleventyConfig.addPassthroughCopy('src/assets/fonts');
  eleventyConfig.addPassthroughCopy('src/assets/images');
  eleventyConfig.addPassthroughCopy('src/assets/svg');
  eleventyConfig.addPassthroughCopy('src/assets/js/vendor');
  eleventyConfig.addPassthroughCopy('src/robots.txt');
  eleventyConfig.addPassthroughCopy('src/.htaccess');
  eleventyConfig.addPassthroughCopy('src/icon-192x192.png');
  eleventyConfig.addPassthroughCopy('src/icon-512x512.png');
  eleventyConfig.addPassthroughCopy('src/apple-touch-icon.png');
  eleventyConfig.addPassthroughCopy('src/maskable-icon.png');
  eleventyConfig.addPassthroughCopy('src/favicon.ico');
  eleventyConfig.addPassthroughCopy('src/icon.svg');
  eleventyConfig.addPassthroughCopy('src/browserconfig.xml');
  eleventyConfig.addPassthroughCopy('src/site.webmanifest');
  eleventyConfig.addPassthroughCopy({'src/svg': '/'});

  // ---------- Server Config --------------------------
  eleventyConfig.setServerOptions({
    watch: ['./_site/assets/scss/**/*.scss', './_site/assets/js/**/*.js'],
    port: 8000
  });

  // 	-------------- Deep-Merge -------------------
  eleventyConfig.setDataDeepMerge(true);

  // 	-------------- Base Config -------------------
  return {
    dir: {
      input: 'src',
      output: '_site',
      includes: '_includes',
      layouts: 'layouts',
      data: '_data'
    },
    templateFormats: ['html', 'njk', 'md', 'ico', '11ty.js'],
    htmlTemplateEngine: 'njk',
    markdownTemplateEngine: 'njk',
    dataTemplateEngine: 'njk',
    passthroughFileCopy: true
  };
}
